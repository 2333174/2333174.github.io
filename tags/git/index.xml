<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>git on SleepyXU.C Blog</title>
    <link>https://2333174.github.io/tags/git/</link>
    <description>Recent content in git on SleepyXU.C Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 17 Aug 2019 14:30:00 +0000</lastBuildDate>
    
	<atom:link href="https://2333174.github.io/tags/git/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Git与GitHub学习笔记</title>
      <link>https://2333174.github.io/2019/08/17/git-note/</link>
      <pubDate>Sat, 17 Aug 2019 14:30:00 +0000</pubDate>
      
      <guid>https://2333174.github.io/2019/08/17/git-note/</guid>
      <description>基本概念 Github 仓库（Repository） 仓库用来存放项目代码，每个项目对应一个仓库，多个项目对应多个仓库。
收藏（Star） 收藏项目，方便下次查看
复制克隆项目（Fork） 为当前用户复制出一个独立的相同内容的仓库
发送请求（Pull Request） 基于fork的项目，将你的更改上传，等待项目变更者的审核以及合并分支
关注（Watch) 关注项目，当项目更新可以接收到通知
事务卡片（Issue） 发现代码Bug,但是目前没有成型代码，需要讨论时用
Git与Github的关系 Git是一款免费、开源的分布式版本控制系统；Github是用Git做版本控制的代码托管平台
仓库管理工具(版本控制工具) Git 介绍  原生态命令行工具 下载地址：戳这里 Git记录的是项目的每个版本  常用操作 本地仓库操作  Git工作区域
 工作区：编辑文件 暂存区：暂存已经修改的文件，最后统一提交到git仓库 git仓库：最终确定的文件保存到本地仓库  文件的状态
 已修改(modified) 已暂存(staged) 已提交(committed)  向仓库中添加文件流程
git init //初始化本地仓库 git status //查看文件的状态 git add 文件名 //将文件提交至暂存区 git commit -m &amp;quot;提交描述&amp;quot;  查看历史提交git log git reflog //cmd被关闭了,查看历史  版本回退
git reset HEAD~n //n为向前回退版本数 git reset 版本号 //进入特定的版本  版本比较</description>
    </item>
    
  </channel>
</rss>