<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Note on SleepyXU.C Blog</title>
    <link>https://2333174.github.io/categories/note/</link>
    <description>Recent content in Note on SleepyXU.C Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 17 Aug 2019 14:30:00 +0000</lastBuildDate>
    
	<atom:link href="https://2333174.github.io/categories/note/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Git与GitHub学习笔记</title>
      <link>https://2333174.github.io/2019/08/17/git-note/</link>
      <pubDate>Sat, 17 Aug 2019 14:30:00 +0000</pubDate>
      
      <guid>https://2333174.github.io/2019/08/17/git-note/</guid>
      <description>基本概念 Github 仓库（Repository） 仓库用来存放项目代码，每个项目对应一个仓库，多个项目对应多个仓库。
收藏（Star） 收藏项目，方便下次查看
复制克隆项目（Fork） 为当前用户复制出一个独立的相同内容的仓库
发送请求（Pull Request） 基于fork的项目，将你的更改上传，等待项目变更者的审核以及合并分支
关注（Watch) 关注项目，当项目更新可以接收到通知
事务卡片（Issue） 发现代码Bug,但是目前没有成型代码，需要讨论时用
Git与Github的关系 Git是一款免费、开源的分布式版本控制系统；Github是用Git做版本控制的代码托管平台
仓库管理工具(版本控制工具) Git 介绍  原生态命令行工具 下载地址：戳这里 Git记录的是项目的每个版本  常用操作 本地仓库操作  Git工作区域
 工作区：编辑文件 暂存区：暂存已经修改的文件，最后统一提交到git仓库 git仓库：最终确定的文件保存到本地仓库  文件的状态
 已修改(modified) 已暂存(staged) 已提交(committed)  向仓库中添加文件流程
git init //初始化本地仓库 git status //查看文件的状态 git add 文件名 //将文件提交至暂存区 git commit -m &amp;quot;提交描述&amp;quot;  查看历史提交git log git reflog //cmd被关闭了,查看历史  版本回退
git reset HEAD~n //n为向前回退版本数 git reset 版本号 //进入特定的版本  版本比较</description>
    </item>
    
    <item>
      <title>个人博客搭建指南 实战篇（一）</title>
      <link>https://2333174.github.io/2019/08/11/blog-build-fulfill-hugo/</link>
      <pubDate>Wed, 14 Aug 2019 22:30:00 +0000</pubDate>
      
      <guid>https://2333174.github.io/2019/08/11/blog-build-fulfill-hugo/</guid>
      <description> 本地搭建步骤 安装Hugo hugo下载地址：戳这里（根据系统下载）
用命令创建博客 hugo new site 文件名  下载并安装主题  主题列表：戳这里
 进入themes目录 下载主题
 如果电脑安装配置好git了，直接在当前目录键入命令
git clone 项目地址  若没有配置git,直接在主题的Github地址下载ZIP压缩包，移动至当前目录解压.(后面部署网站还是需要GitHub，git教程：Git与GitHub学习笔记)
   在本地启动个人博客  键入命令：
hugo server -t 主题名称  访问http://localhost:1313, 若访问成功即配置完成
 写博客在主题文件夹/content/post/文件夹内添加博客文本文件（*.md文件）即可
  将个人博客部署到远端 部署到GitHub Pages </description>
    </item>
    
    <item>
      <title>个人博客搭建指南 介绍篇</title>
      <link>https://2333174.github.io/2019/08/11/blog-build-introduction/</link>
      <pubDate>Sun, 11 Aug 2019 22:30:00 +0000</pubDate>
      
      <guid>https://2333174.github.io/2019/08/11/blog-build-introduction/</guid>
      <description> 引言 为什么要搭建个人博客  有利于帮助自己思考，加深对技术的理解，在写博客的过程中提升技术使用熟练度。 提高自己的表达能力、归纳总结能力 （工作简历加分项）  介绍 常用博客搭建框架 根据搭建的博客是否有后台管理系统，将博客框架分为动态和静态两种。 实现一般的个人博客展示，搭建一个静态博客站点即可—— 首先相对轻量，其次有利于自己动手DIY。
这些博客搭建平台，博主并没有一一实践过，所以只做粗略的介绍，感兴趣可以自己查看官网。
WordPress 著名的动态博客搭建平台，搭建出的博客具有强大的后台管理系统，方便管理自己的博客。特点：↓↓↓
 入门使用成本低、但是定制的学习成本高（PHP大神除外）；对于MarkDown编辑的支持不行，虽然有插件，但是功能太弱。1
 官网：戳这里
Hexo(推荐) 静态博客搭建平台之一，基于Node.js。Hexo官网上说的几个特点：
  超快速度，渲染快 支持Markdown 一键部署 丰富的插件   等我尝试后再具体说说搭建的体验。(未来网的博客准备用Hexo搭建，这里埋个坑)。
Hugo(推荐) 基于go语言实现的静态博客搭建平台，当前博客就是基于hugo搭建的，部署和DIY都比较简单，但是大致看了一下目前Hugo官网上的主题没有hexo多。个人体验，用官网的话来说：
 简单、易用、高效、易扩展、快速部署
 jekyllrb 基于Ruby环境的静态博客搭建平台，官网：戳这里
VuePress 新出的相对冷门的静态博客搭建平台，基于vue.js框架2。官网：VuePress官网
Solo Java博客系统，官网：戳这里
参考资料  博客搭建攻略(一)：平台选择[return] YouTube:程序猿如何搭建一个属于自己的博客 [return]   </description>
    </item>
    
    <item>
      <title>爱国上网指北之酸酸乳(待更新)</title>
      <link>https://2333174.github.io/2019/08/09/ssr-try/</link>
      <pubDate>Fri, 09 Aug 2019 19:00:00 +0000</pubDate>
      
      <guid>https://2333174.github.io/2019/08/09/ssr-try/</guid>
      <description>介绍篇 爱国上网目前有VPN(维皮恩)、Shadowsocks(酸酸乳)两种比较主流的方式，这篇博客主要介绍酸酸乳这种方式(原因↓↓↓)，仅供个人学习！！！
维皮恩和酸酸乳的区别  维皮恩的开发目的是给企业内网直接传输加密数据，最重要的就是安全性，而流量特征变得很明显，因此很容易被封。 酸酸乳是被设计来混淆数据，即专门用于爱国上网，增加墙检查出流量特征所需的计算量，提高实时检测和匹配的成本，而不是加密。  使用篇 ShadowsocksR客户端下载  Github下载地址
 酸酸乳客户端Windows版 酸酸乳客户端MAC版  百度云
 链接：酸酸乳客户端Windows版提取码：4dfw
 链接：酸酸乳客户端MAC版提取码：0ahb
   ShadowsocksR客户端使用  解压压缩包，得到一下文件.任选一个可打开版本的应用程序打开.两个版本的功能是完全一样的，不同之处是根据你系统安装的 .NET Framework 支持库版本，这个支持库有v2.0 / 3.5 / 4.0 / 4.5版本。这里的 .NET Framework v2.0就是对应的 DotNet2.0 Shadowsocks客户端，v4.0则是对应 DotNet 4.0的。
 打开后，任务栏会出现一个小飞机。这时还不能使用，我们需要上网查找能用的ssr节点。
 浏览器下载地址：酸酸乳订阅源原地址 百度云下载地址：链接：酸酸乳订阅源百度云地址提取码：yhx9  解压文件 =&amp;gt; 打开docs文件夹 =&amp;gt; index.html =&amp;gt;打开后全是酸酸乳节点！！！！
 点击节点后的二维码 =&amp;gt; 右键单击任务栏小飞机图标(酸酸乳客户端) =&amp;gt; 点击二维码扫描 =&amp;gt;客户端左侧出现添加的节点
 再次右键单击任务栏小飞机图标 =&amp;gt;改变服务器切换为刚添加的代理服务器，设置系统代理模式为全局模式，代理规则为绕过局域网和大陆
 配置完成！！试试访问YouTubu, Get it ！！！</description>
    </item>
    
    <item>
      <title>HTML&amp;&amp;CSS学习笔记(持续更新中)</title>
      <link>https://2333174.github.io/2019/08/09/note-html-css/</link>
      <pubDate>Mon, 05 Aug 2019 16:30:00 +0000</pubDate>
      
      <guid>https://2333174.github.io/2019/08/09/note-html-css/</guid>
      <description>前端简介   结构：HTML用于描述页面的结构
 表现：CSS用于控制页面元素的样式
 行为：JaveScript用于响应用户操作
  HTML 基础 注释 &amp;lt;!-- 这是一段注释 功能： 作者： 日期： --&amp;gt;  文档声明 &amp;lt;!-- h5的文档声明，声明当前网页是按照HTML5标准版写的 --&amp;gt; &amp;lt;!doctype html&amp;gt;  乱码问题  中文系统默认编码方式为GB2312 UTF-8编码方式可以适用于各种语言，前端常用编码方式
 记事本的编码方式 ： ANSI&amp;ndash;参照系统的自动编码
 &amp;lt;!doctype html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;!-- 需要告诉浏览器，网页所采用的编码字符集 --&amp;gt; &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;/&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;/html&amp;gt;  meta标签用来设置网页的 一些元数据 ，比如网页的字符集，关键字、简介
  常用标签  标题标签  在HTML 中， 一共有六级标题标签：h1~h6 显示效果上h1最大，h6最小 使用HTML标签时，关心的是标签的语义 6级标签中，h1的最重要，表示一个网页中的主要内容 对于搜索引擎来说，h1的重要性仅次于title,搜索引擎检索完title，会立即查看h1中的内容，页面只能写一个h1  段落标签  换行标签 水平线标签  实体  在HTML中，一些如&amp;lt; &amp;gt;这种特殊字符是不能直接使用的，需要使用一些特殊的符号来表示这些特殊字符，这些特殊符号我们称为实体（转义字符串）</description>
    </item>
    
    <item>
      <title>Javascript学习笔记</title>
      <link>https://2333174.github.io/2019/07/08/note-js/</link>
      <pubDate>Mon, 08 Jul 2019 15:00:00 +0000</pubDate>
      
      <guid>https://2333174.github.io/2019/07/08/note-js/</guid>
      <description>Javascript基础 输出语句  alert(s) 弹框
 document.write(s) 将字符串输出到界面
 console.log(s) 开发者模式显示日志
  检查类型 var a=1 console.log(typeof a) //控制台输出: number  数据类型  Number String Boolean null :typeof 为 object undefinied object  对象 基础  类似于python的字典类型
 获取属性值的方式
 object[属性名] object.属性名  检查对象是否含有属性名属性名 in 对象
  工厂模式创建对象 构造函数 //构造函数 function Person(name,age,gender){ this.name=name; this.age=age; this.gender=gender; } var per= new Person(&amp;quot;张三&amp;quot;，18，&amp;quot;男&amp;quot;)  强制转换  String(a)
 Number(a)非数字字符串&amp;ndash;&amp;gt;NaNnull&amp;ndash;&amp;gt;0undefined&amp;mdash;&amp;gt;NaNtrue&amp;ndash;&amp;gt;1false&amp;ndash;&amp;gt;0
 parseInt() 对于非字符串型数据 先转换成字符串true&amp;ndash;&amp;gt;undefined</description>
    </item>
    
  </channel>
</rss>